{{#if results.length}}
<h3>
  <p class="text-center">{{results.length}} results found</p>
</h3>

<form action="/result" method="get">
  <select class="form-control" id="filter" name="filter" value="{{filter}}" onchange="this.form.submit()">
    <option selected>Sort By: </option>
    <option value="Featured">Featured</option>
    <option value="Low to High">Price: Low to High</option>
    <option value="High to Low">Price: High to Low</option>
    <option value="Delivery Time">Delivery Time</option>
  </select>
</form>

<div class="container">
  <div class="row">
    {{#each results}}
    <div class="col-4 mt-4">
      <div class="card bg-dark">
        <a href="/selected" target="_blank">
          <img class="card-img-top" style="height:200px; object-fit:cover;" src="../public/images/{{this.image_path}}"
            alt="Card image cap">
        </a>
        <div class="card-body text-white">
          <h5 class="card-title">{{this.restaurant_name}}</h5>
          <p class="card-text">Address: {{this.restaurant_address}}</p>
          <p class="card-text">Price: {{this.price_range}}</p>
          <p class="card-text">Expected Delivery Time: {{this.delivery_time}}</p>
          <p class="card-text">Category: {{this.category_name}}</p>
        </div>
      </div>
    </div>
    {{/each}}
  </div>
</div>
{{else}}
<h1>No results found</h1>
{{/if}}

<!--new map-->
<!--
<div id="map" style="height: 400px;"></div>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script> // this initialize the map using  Leaflet
  // Replace latitude and longitude with the values from your geocoding API response
var latitude = 37.7749;
var longitude = -122.4194;

var map = L.map('map').setView([latitude, longitude], 12); // Set the initial center and zoom level of the map

L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
  maxZoom: 18
}).addTo(map);

var marker = L.marker([latitude, longitude]).addTo(map);
</script>-->

<div id="map">
</div>

<!--* working maps api for test locations-->
<script>
    function initMap() {
      // Map options
      var options = {
        zoom: 8,
        center: { lat: 37.7749, lng: -122.4194 }
        }
        
        // New map
        var map = new google.maps.Map(document.getElementById('map'), options);

        // populate marker array
        var markers = [
        {{#each results}}
        {
        coords: { lat: {{ this.latitude }}, lng: {{ this.longitude }} },
        content: '<h1>{{this.restaurant_name}}</h1>'
        },
        {{/each}}
        ];

        console.log(markers);
        
        for (let i = 0; i < markers.length; i++) {
          addMarker(markers[i]);
        }
        
        // Add the addMarker() function here
        function addMarker(props) {
          var marker = new google.maps.Marker({
            position: props.coords,
            map: map
            });
            
            if (props.content) {
              var infoWindow = new google.maps.InfoWindow({
                content: props.content
                });
                
                marker.addListener('click', function () {
                  infoWindow.open(map, marker);
                  });
            }
        }   
    }
    
</script>

    